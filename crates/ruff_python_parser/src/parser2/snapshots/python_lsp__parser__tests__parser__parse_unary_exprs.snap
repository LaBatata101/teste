---
source: src/parser/tests.rs
expression: "parse(\"\n-1\n+1\n~1\n-1 + 2\n---1\nnot x\n\")"
---
ParsedFile {
    ast: Module {
        body: [
            Expression(
                ExpressionStmt {
                    value: UnaryOp(
                        UnaryOpExpr {
                            op: USub,
                            operand: Literal(
                                LiteralExpr {
                                    value: Int(
                                        "1",
                                    ),
                                    range: 2..3,
                                },
                            ),
                            range: 1..3,
                        },
                    ),
                    range: 1..3,
                },
            ),
            Expression(
                ExpressionStmt {
                    value: UnaryOp(
                        UnaryOpExpr {
                            op: UAdd,
                            operand: Literal(
                                LiteralExpr {
                                    value: Int(
                                        "1",
                                    ),
                                    range: 5..6,
                                },
                            ),
                            range: 4..6,
                        },
                    ),
                    range: 4..6,
                },
            ),
            Expression(
                ExpressionStmt {
                    value: UnaryOp(
                        UnaryOpExpr {
                            op: Invert,
                            operand: Literal(
                                LiteralExpr {
                                    value: Int(
                                        "1",
                                    ),
                                    range: 8..9,
                                },
                            ),
                            range: 7..9,
                        },
                    ),
                    range: 7..9,
                },
            ),
            Expression(
                ExpressionStmt {
                    value: BinaryOp(
                        BinaryOpExpr {
                            left: UnaryOp(
                                UnaryOpExpr {
                                    op: USub,
                                    operand: Literal(
                                        LiteralExpr {
                                            value: Int(
                                                "1",
                                            ),
                                            range: 11..12,
                                        },
                                    ),
                                    range: 10..12,
                                },
                            ),
                            op: Add,
                            right: Literal(
                                LiteralExpr {
                                    value: Int(
                                        "2",
                                    ),
                                    range: 15..16,
                                },
                            ),
                            range: 10..16,
                        },
                    ),
                    range: 10..16,
                },
            ),
            Expression(
                ExpressionStmt {
                    value: UnaryOp(
                        UnaryOpExpr {
                            op: USub,
                            operand: UnaryOp(
                                UnaryOpExpr {
                                    op: USub,
                                    operand: UnaryOp(
                                        UnaryOpExpr {
                                            op: USub,
                                            operand: Literal(
                                                LiteralExpr {
                                                    value: Int(
                                                        "1",
                                                    ),
                                                    range: 20..21,
                                                },
                                            ),
                                            range: 19..21,
                                        },
                                    ),
                                    range: 18..21,
                                },
                            ),
                            range: 17..21,
                        },
                    ),
                    range: 17..21,
                },
            ),
            Expression(
                ExpressionStmt {
                    value: UnaryOp(
                        UnaryOpExpr {
                            op: Not,
                            operand: Id(
                                IdExpr {
                                    id: "x",
                                    ctx: Load,
                                    range: 26..27,
                                },
                            ),
                            range: 22..27,
                        },
                    ),
                    range: 22..27,
                },
            ),
        ],
        range: 0..27,
    },
    parse_errors: [],
}
